"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const child_process_1 = require("child_process");
exports.default = {
    controller: {
        /** auto load controller in 'ctrlDir', only require file, can't load to ctx */
        autoLoad: true,
        /** controllers dir pathï¼Œsupport array */
        ctrlDir: path.join('app', 'controller'),
        /** param validate */
        paramValidate: true,
        /** auth middleware */
        auth: true,
        /** generate frontend request sdk */
        genSDK: {
            enable: false,
            sdkDir: path.join('app', 'assets', 'service'),
            /** route filter for generate, default: ^\/api\/ */
            filter: [/^\/api\//g],
            type: 'ts',
            serviceType: 'class',
            camelCase: true,
            hook: {
                customClassName: name => name.replace('Controller', 'Service'),
            },
        },
        /** api info report */
        apiReport: {
            enable: false,
            /** send url, data is OpenAPI 3.0 schema json data */
            url: '',
        },
        /** RSA key */
        encrypt: {
            publicKey: '',
            privateKey: '',
            /** PKCS8 | PKCS1 (default) */
            type: 'PKCS1',
        },
        compatible: {
            /**
             * return 404 when controller didn't change ctx.body (egg default)
             * if 'false', will return 204 (default)
             */
            ret404WhenNoChangeBody: false,
        },
        routeRegister: (app, route) => {
            app.router.register(route.url, [].concat(route.method), [].concat(...route.middleware.map(m => m(app, route)).filter(m => m), route.function));
        },
        fork: child_process_1.fork,
    },
    aop: {
        autoRegisterToCtx: true,
    },
};
