/// <reference types="node" />
import { Application } from 'egg';
import { CliConfig } from 'openapi-generator';
import { RouteType } from '../lib/type';
import { fork } from 'child_process';
declare const _default: {
    controller: {
        /** auto load controller in 'ctrlDir', only require file, can't load to ctx */
        autoLoad: boolean;
        /** controllers dir pathï¼Œsupport array */
        ctrlDir: string | string[];
        /** param validate */
        paramValidate: boolean;
        /** auth middleware */
        auth: boolean;
        /** generate frontend request sdk */
        genSDK: {
            enable: boolean;
            filter?: RegExp[];
        } & CliConfig;
        /** api info report */
        apiReport: {
            enable: boolean;
            /** send url, data is OpenAPI 3.0 schema json data */
            url: string;
        };
        /** RSA key */
        encrypt: {
            publicKey: string;
            privateKey: string;
            /** PKCS8 | PKCS1 (default) */
            type: string;
        };
        compatible: {
            /**
             * return 404 when controller didn't change ctx.body (egg default)
             * if 'false', will return 204 (default)
             */
            ret404WhenNoChangeBody: boolean;
        };
        routeRegister: (app: Application, route: RouteType<any>) => void;
        fork: typeof fork;
    };
    aop: {
        autoRegisterToCtx: boolean;
    };
};
export default _default;
