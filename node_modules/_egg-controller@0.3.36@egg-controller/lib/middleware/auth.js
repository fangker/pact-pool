"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const egg_aop_1 = require("egg-aop");
const error_1 = require("../error");
const param_1 = require("../param");
const BaseAuth_1 = require("../auth/BaseAuth");
exports.SkipAuthSymbol = Symbol('SkipAuthSymbol');
exports.authMiddleware = (app, typeInfo) => {
    if (!app.config.controller.auth) {
        return;
    }
    return (ctx, next) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
        if (ctx[exports.SkipAuthSymbol]) {
            return next();
        }
        const paramObj = yield param_1.getParamDataObj(ctx, typeInfo);
        yield Promise.all((typeInfo.auth || [])
            .map((permRole) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
            const params = BaseAuth_1.getRoleInfo(permRole).params.map(p => {
                if (p.required && !(p.name in paramObj)) {
                    throw new error_1.BadRequestError(`Permission [${permRole.name}] NEED Param [${p.name}]`);
                }
                return paramObj[p.name];
            });
            if (!(yield egg_aop_1.getInstance(permRole, ctx.app, ctx).has(...params))) {
                throw new error_1.ForbiddenError(`Forbidden, Need: [${permRole.displayName || permRole.name}] Permission.`);
            }
        }))
            .filter(r => r));
        return next();
    });
};
