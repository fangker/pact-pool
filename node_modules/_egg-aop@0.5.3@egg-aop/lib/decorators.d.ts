import { InstanceSource } from './getInstance';
/**
 * register component
 * @export
 * @param {InstanceSource} from 'Context' | 'Application'
 * @param {*} [classType] register component
 * @param {*} [keyType] the key of register component, default component self
 * @returns void
 */
export declare function register(from: InstanceSource, classType?: any, keyType?: any): (target: any) => void;
/**
 * inject in context
 *
 * @export
 * @param {*} [keyType]
 * @returns
 */
export declare function context(keyType?: any): (target: any) => void;
/**
 * inject in application
 *
 * @export
 * @param {*} [keyType]
 * @returns
 */
export declare function application(keyType?: any): (target: any) => void;
/**
 * inject
 * type: class or string
 */
export declare function inject(type?: any): (target: any, key: string) => void;
/**
 * lazy inject
 * type: class or string
 */
export declare function lazyInject(type?: any): (target: any, key: string) => void;
